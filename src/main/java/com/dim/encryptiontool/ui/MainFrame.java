/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dim.encryptiontool.ui;

import com.dim.encryption.DES;

import java.awt.Color;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import org.apache.commons.lang3.StringUtils;

/**
 *
 * @author yanming_dai @TODO 完善log4j日志
 */
public class MainFrame extends javax.swing.JFrame {
    static String lastSelection  = null;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        btnEnc.setMnemonic('C');
        btnDec.setMnemonic('D');
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSrcFile = new javax.swing.JTextField();
        btnSrcFile = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtDestFile = new javax.swing.JTextField();
        btnDestFile = new javax.swing.JButton();
        btnEnc = new javax.swing.JButton();
        btnDec = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JIT脚本加密/解密工具");
        setBackground(new java.awt.Color(217, 228, 241));
        setFont(new java.awt.Font("Academy Engraved LET", 0, 12)); // NOI18N
        setPreferredSize(new java.awt.Dimension(500, 220));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("选择文件"));

        jLabel1.setText("源　文件");

        btnSrcFile.setText("...");
        btnSrcFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSrcFileActionPerformed(evt);
            }
        });

        jLabel2.setText("目标文件");

        btnDestFile.setText("...");
        btnDestFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDestFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSrcFile, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSrcFile))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDestFile)
                        .addGap(18, 18, 18)
                        .addComponent(btnDestFile)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSrcFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSrcFile)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDestFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDestFile)
                    .addComponent(jLabel2))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        btnEnc.setText("加密(C)");
        btnEnc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncActionPerformed(evt);
            }
        });

        btnDec.setText("解密(D)");
        btnDec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEnc)
                        .addGap(17, 17, 17)
                        .addComponent(btnDec)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnc)
                    .addComponent(btnDec))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 选择目标文件
     * @param winTitle 窗口标题
     * @param resultField 选择结果将要显示在的元素
     */
    void chooseFile(String winTitle, javax.swing.JTextField resultField) {
        FileSystemView desk = FileSystemView.getFileSystemView();
        JFileChooser file = null;

        if (null == lastSelection) {
            file = new JFileChooser(desk);
        } else {
            file = new JFileChooser(lastSelection, desk);
        }

        file.setDialogTitle(winTitle);
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);//只能选择文件
        int returnVal = file.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            resultField.setText(file.getSelectedFile().getAbsolutePath());
            lastSelection = file.getSelectedFile().getAbsolutePath();
            System.out.println("You chose to open this file: "
                    + file.getSelectedFile().getAbsolutePath());
        }
    }
    
    /**
     * 加密的源文件选择事件
     *
     * @param evt
     */
    private void btnSrcFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSrcFileActionPerformed
       chooseFile("请选择要加密的源文件。",txtSrcFile);

    }//GEN-LAST:event_btnSrcFileActionPerformed

    /**
     * 加密事件
     *
     * @param evt
     */
    private void btnEncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncActionPerformed
    
        String srcPath = txtSrcFile.getText();
        String destPath = txtDestFile.getText();

        if (StringUtils.isBlank(srcPath)) {
            JOptionPane.showMessageDialog(this, "请选择要加密的源文件。");
            return;
        } else if(!(new File(srcPath).exists())){
            JOptionPane.showMessageDialog(this, "源文件不存在。");
            return;
        } else if(new File(srcPath).isDirectory()){
            JOptionPane.showMessageDialog(this, "只能选择文件。");
            return;
        } 
        if (StringUtils.isBlank(destPath)) {
            int action = JOptionPane.showConfirmDialog(this, "您未选择目标文件，原文件将被覆盖。", "注意", JOptionPane.OK_CANCEL_OPTION);
            if (action == JOptionPane.OK_OPTION) {
                //覆盖源文件
                //TODO 异步处理
                 encryptFile(srcPath, srcPath);
                 txtDestFile.setText(txtSrcFile.getText());
            }
        } else {
            encryptFile(srcPath, destPath);
        }
    }//GEN-LAST:event_btnEncActionPerformed
   
    /**
     * 加密文件业务
     * @param srcPath
     * @param destPath 
     */
    void encryptFile(String srcPath, String destPath) {
        try {
            DES.encryptFile(srcPath, destPath, DES.pass);
            JOptionPane.showMessageDialog(this, "文件加密完成。");
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "加密失败:" + ex.getClass());
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * 解密事件
     *
     * @param evt
     */
    private void btnDecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecActionPerformed
        String srcPath = txtSrcFile.getText();
        String destPath = txtDestFile.getText();
        if (StringUtils.isBlank(srcPath)) {
            JOptionPane.showMessageDialog(this, "请选择要解密的文件。");
        } else if (StringUtils.isBlank(destPath)) {
            int action = JOptionPane.showConfirmDialog(this, "您未选择目标文件，原文件将被覆盖。", "注意", JOptionPane.OK_CANCEL_OPTION);
            if (JOptionPane.OK_OPTION == action) {
               decryptFile(srcPath, srcPath);
                txtDestFile.setText(txtSrcFile.getText());
            }
        } else {
            decryptFile(srcPath, destPath);
        }
    }//GEN-LAST:event_btnDecActionPerformed
   
    /**
    * 解密业务
    * @param srcPath
    * @param destPath 
    */
    void decryptFile(String srcPath, String destPath) {
        try {
            DES.decryptFile(srcPath, destPath, DES.pass);
            JOptionPane.showMessageDialog(this, "文件解密完成。");
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "解密失败，请确认文件有效性。");
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * 加密后保存的目标文件选择事件
     *
     * @param evt
     */
    private void btnDestFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDestFileActionPerformed
        chooseFile("请选择加密后保存的位置。",txtDestFile);
        
    }//GEN-LAST:event_btnDestFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                MainFrame mf = new MainFrame();
                mf.diy();
                mf.setLocationRelativeTo(null);
                mf.setVisible(true);
            }
        });
    }
    //定义窗体外观

    private void diy() {
        Color clrBg = new Color(240, 240, 240);
        getContentPane().setBackground(clrBg);
        jPanel1.setBackground(clrBg);
        try {
            setIconImage(Toolkit.getDefaultToolkit().getImage(MainFrame.class.getResource("/image/eclipse32.gif")));
//            this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/icons/folder.jpg")).getImage());
        } catch (Exception e) {
//            e.printStackTrace();
        }
    }
    // 设置窗口图标 
    protected void setWindowIcon() {
        ImageIcon imageIcon = new ImageIcon(getClass().getResource("/image/internal_browser.gif"));

        // 设置标题栏的图标为face.gif  
        this.setIconImage(imageIcon.getImage());

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDec;
    private javax.swing.JButton btnDestFile;
    private javax.swing.JButton btnEnc;
    private javax.swing.JButton btnSrcFile;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtDestFile;
    private javax.swing.JTextField txtSrcFile;
    // End of variables declaration//GEN-END:variables
}
